name: CI/CD for .NET Project

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        run: |
          docker build -t agilazizovf/azconprice .
          docker push agilazizovf/azconprice

      - name: Deploy to Ubuntu Server via SSH
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_IP }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            # Create a directory for the project if it doesn't exist
            mkdir -p ~/azconprice-backend
            
            # Navigate to the project directory
            cd ~/azconprice-backend
            
            # Create a new docker-compose.yml file on the server
            # This is the safest way to inject the configuration.
            cat <<EOF > docker-compose.yml
            version: "3.8"
            
            services:
              azconprice-backend:
                image: agilazizovf/azconprice
                container_name: azconprice-backend
                ports:
                  - "7135:7135"
                environment:
                  ASPNETCORE_ENVIRONMENT: Production
                  ConnectionStrings__DefaultConnection: "Host=ep-rough-dew-a2fcsmvv-pooler.eu-central-1.aws.neon.tech;Database=azconpriceprod;Username=neondb_owner;Password=npg_Q5FWuvGZPXq8;SSL Mode=Require;Trust Server Certificate=true"
                volumes:
                  - azconprice_files:/app/files
                restart: always
            
            volumes:
              azconprice_files:
            EOF
            
            # Pull the latest Docker image to ensure it's up-to-date
            docker-compose pull
            
            # Stop and remove old containers, then start a new one
            docker-compose up -d --remove-orphans